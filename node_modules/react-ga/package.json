{
  "_args": [
    [
      {
        "raw": "react-ga",
        "scope": null,
        "escapedName": "react-ga",
        "name": "react-ga",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/kartikgrewal/Development/Websites/test/frontend"
    ]
  ],
  "_from": "react-ga@latest",
  "_id": "react-ga@2.4.1",
  "_inCache": true,
  "_location": "/react-ga",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-ga-2.4.1.tgz_1515545710711_0.4288739606272429"
  },
  "_npmUser": {
    "name": "simeonc",
    "email": "simeon@thehavens.co.nz"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-ga",
    "scope": null,
    "escapedName": "react-ga",
    "name": "react-ga",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-ga/-/react-ga-2.4.1.tgz",
  "_shasum": "dfbd5f028ed39a07067f7a8bf57dc0d240000767",
  "_shrinkwrap": null,
  "_spec": "react-ga",
  "_where": "/Users/kartikgrewal/Development/Websites/test/frontend",
  "author": {
    "name": "@adamlofting"
  },
  "bugs": {
    "url": "https://github.com/react-ga/react-ga/issues"
  },
  "contributors": [
    {
      "name": "@toolness"
    }
  ],
  "dependencies": {
    "prop-types": "^15.6.0",
    "react": "^15.6.2 || ^16.0"
  },
  "description": "React Google Analytics Module.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^7.2.3",
    "babel-loader": "^7.1.2",
    "babel-plugin-istanbul": "^4.1.4",
    "babel-plugin-rewire": "^1.1.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "conventional-changelog-cli": "^1.3.2",
    "enzyme": "^2.9.1",
    "eslint": "^4.3.0",
    "eslint-config-airbnb": "^15.1.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-mocha": "^4.11.0",
    "eslint-plugin-react": "^7.1.0",
    "fs-extra": "^4.0.2",
    "html-webpack-plugin": "^2.30.1",
    "jsdom": "~9.12.0",
    "jsdom-global": "~2.1.1",
    "mocha": "^3.5.0",
    "nyc": "~10.2.0",
    "react-addons-test-utils": "^15.0.1",
    "react-dom": "^15.0.1",
    "react-router": "^4.2.0",
    "react-router-dom": "^4.2.2",
    "rewire": "^2.5.2",
    "should": "^12.0.0",
    "sinon": "^3.2.1",
    "webpack": "^3.5.5",
    "webpack-dev-server": "^2.9.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-hjn2SRdhB3JrdWvodNVegjxLi6xiQyCEELVTvutSB/g57GmfGqSxIvKmxgEN3c6Rjp21rxOYou6TrwzTE288Ig==",
    "shasum": "dfbd5f028ed39a07067f7a8bf57dc0d240000767",
    "tarball": "https://registry.npmjs.org/react-ga/-/react-ga-2.4.1.tgz"
  },
  "gitHead": "b0e33a60afa2f1d82a7a6c438f5eb86eca88ff34",
  "homepage": "https://github.com/react-ga/react-ga",
  "keywords": [
    "React",
    "GA",
    "Google Analytics",
    "Universal Analytics"
  ],
  "license": "Apache-2.0",
  "main": "dist/react-ga.js",
  "maintainers": [
    {
      "name": "simeonc",
      "email": "simeon@thehavens.co.nz"
    },
    {
      "name": "yangshun",
      "email": "tay.yang.shun@gmail.com"
    },
    {
      "name": "adamlofting",
      "email": "contactme@adamlofting.com"
    }
  ],
  "name": "react-ga",
  "nyc": {
    "include": [
      "src/**/*"
    ],
    "require": [
      "babel-register"
    ],
    "sourceMap": false,
    "instrument": false,
    "cache": true,
    "all": true,
    "reporter": [
      "lcov",
      "cobertura",
      "text-summary"
    ],
    "report-dir": "./coverage"
  },
  "optionalDependencies": {
    "prop-types": "^15.6.0",
    "react": "^15.6.2 || ^16.0"
  },
  "readme": "# react-ga\n### React Google Analytics Module\n\n[![Build Status](https://img.shields.io/travis/react-ga/react-ga/master.svg?style=flat-square)](https://travis-ci.org/react-ga/react-ga)\n[![npm version](https://img.shields.io/npm/v/react-ga.svg?style=flat-square)](https://www.npmjs.com/package/react-ga)\n[![npm downloads](https://img.shields.io/npm/dm/react-ga.svg?style=flat-square)](https://www.npmjs.com/package/react-ga)\n\nThis is a JavaScript module that can be used to include Google Analytics tracking code in a website or app that uses [React](https://facebook.github.io/react/) for its front-end codebase. It does not currently use any React code internally, but has been written for use with a number of Mozilla Foundation websites that are using React, as a way to standardize our GA Instrumentation across projects.\n\nIt is designed to work with the latest version of Google Analytics, [Universal Analytics](https://support.google.com/analytics/answer/2790010). At this point, all Google Analytics projects are being upgraded to Universal Analytics, so this module will not support the older `ga.js` implementation.\n\nThis module is mildly opinionated in how we instrument tracking within our front-end code. Our API is slightly more verbose than the core Google Analytics library, in the hope that the code is easier to read and understand for our engineers. See examples below.\n\nIf you use `react-ga` too, we'd love your feedback. Feel free to file [issues, ideas and pull requests against this repo](https://github.com/react-ga/react-ga/issues).\n\n## Installation\n\nWith [npm](https://www.npmjs.com/):\n```bash\nnpm install react-ga --save\n```\n\nWith [bower](http://bower.io/):\n```bash\nbower install react-ga --save\n```\n\nNote that [React](https://github.com/facebook/react) >= 0.14.0 is needed in order to use the `<OutboundLink>` component.\n\n## Usage\n\n### With npm\n\nInitializing GA and Tracking Pageviews:\n\n```js\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-000000-01');\nReactGA.pageview(window.location.pathname + window.location.search);\n```\n\n### With bower\n\nWhen included as a script tag, a variable `ReactGA` is exposed in the global scope.\n\n```js\n\n<!-- The core React library -->\n<script src=\"https://unpkg.com/react@15.5.0/dist/react.min.js\"></script>\n<!-- The ReactDOM Library -->\n<script src=\"https://unpkg.com/react-dom@15.5.0/dist/react-dom.min.js\"></script>\n<!-- ReactGA library -->\n<script src=\"/path/to/bower_components/react-ga/dist/react-ga.min.js\"></script>\n\n<script>\n  ReactGA.initialize('UA-000000-01', { debug: true });\n</script>\n```\n\n### Demo Code\n\nFor a working demo have a look at the [demo files](/demo) or clone this repo and run `npm install` `npm start` then open http://localhost:8080 and follow the instructions.\nDemo requires you to have your own TrackingID.\n\n## Upgrading from `1.x` to `2.x`\n\nYou can safely upgrade to `2.x` as there are no breaking changes. The main new feature is that the underlying `ga` function is now exposed via the property `ReactGA.ga`. This can be helpful when you need a function that `ReactGA` doesn't support at the moment. Also, for that reason, it is recommended that you rename your imported value as `ReactGA` rather than `ga` so as to distinguish between the React GA wrapper and the original `ga` function.\n\n## Community Components\n\nWhile some convenience components are included inside the package, some are specific to each application.\nA community curated list of these is available in the wiki: https://github.com/react-ga/react-ga/wiki/Community-Components. Feel free to add any you have found useful.\n\n## API\n\n#### ReactGA.initialize(gaTrackingID, options)\n\nGA must be initialized using this function before any of the other tracking functions will record any data. The values are checked and sent through to the `ga('create', ...` call.\n\n###### Example\n\n```js\nReactGA.initialize('UA-000000-01', {\n  debug: true,\n  titleCase: false,\n  gaOptions: {\n    userId: 123\n  }\n});\n```\n\n|Value|Notes|\n|------|-----|\n|gaTrackingID| `String`. Required. GA Tracking ID like `UA-000000-01`.|\n|options.debug| `Boolean`. Optional. If set to `true`, will output additional feedback to the console.|\n|options.titleCase| `Boolean`. Optional. Defaults to `true`. If set to `false`, strings will not be converted to title case before sending to GA.|\n|options.gaOptions| `Object`. Optional. [GA configurable create only fields.](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference)|\n\nIf you are having additional troubles and setting `debug = true` shows as working please try using the [Chrome GA Debugger Extension](https://chrome.google.com/webstore/detail/google-analytics-debugger/jnkmfdileelhofjcijamephohjechhna).\nThis will help you figure out if your implementation is off or your GA Settings are not correct.\n\n#### ReactGA.set(fieldsObject)\n\n###### Example\n\n```js\nReactGA.set({ userId: 123 });\n```\n\n|Value|Notes|\n|------|-----|\n|fieldsObject|`Object`. e.g. `{ userId: 123 }`|\n\n#### ReactGA.pageview(path)\n\n###### Example\n\n```js\nReactGA.pageview('/about/contact-us');\n```\n\n|Value|Notes|\n|------|-----|\n|path|`String`. e.g. '/get-involved/other-ways-to-help'|\n|title|`String`. Optional. e.g. 'Other Ways to Help'|\n\nSee example above for use with `react-router`.\n\n#### ReactGA.modalview(modalName)\n\nA modal view is often an equivalent to a pageview in our UX, but without a change in URL that would record a standard GA pageview. For example, a 'contact us' modal may be accessible from any page in a site, even if we don't have a standalone 'contact us' page on its own URL. In this scenario, the modalview should be recorded using this function.\n\n###### Example\n\n```js\nReactGA.modalview('/about/contact-us');\n```\n\n|Value|Notes|\n|------|-----|\n|modalName|`String`. E.g. 'login', 'read-terms-and-conditions'|\n\n#### ReactGA.event(args)\n\nTracking in-page `event` interactions is key to understanding the use of any interactive web property. This is how we record user interactions that don't trigger a change in URL.\n\n###### Examples\n\n```js\nReactGA.event({\n  category: 'User',\n  action: 'Created an Account'\n});\n\nReactGA.event({\n  category: 'Social',\n  action: 'Rated an App',\n  value: 3\n});\n\nReactGA.event({\n  category: 'Editing',\n  action: 'Deleted Component',\n  label: 'Game Widget'\n});\n\nReactGA.event({\n  category: 'Promotion',\n  action: 'Displayed Promotional Widget',\n  label: 'Homepage Thing',\n  nonInteraction: true\n});\n```\n\n|Value|Notes|\n|------|-----|\n|args.category|`String`. Required. A top level category for these events. E.g. 'User', 'Navigation', 'App Editing', etc.|\n|args.action|`String`. Required. A description of the behaviour. E.g. 'Clicked Delete', 'Added a component', 'Deleted account', etc.|\n|args.label|`String`. Optional. More precise labelling of the related action. E.g. alongside the 'Added a component' action, we could add the name of a component as the label. E.g. 'Survey', 'Heading', 'Button', etc.|\n|args.value|`Int`. Optional. A means of recording a numerical value against an event. E.g. a rating, a score, etc.|\n|args.nonInteraction|`Boolean`. Optional. If an event is not triggered by a user interaction, but instead by our code (e.g. on page load, it should be flagged as a `nonInteraction` event to avoid skewing bounce rate data.|\n|args.transport|`String`. Optional. This specifies the transport mechanism with which hits will be sent. Valid values include 'beacon', 'xhr', or 'image'.|\n\n#### ReactGA.timing(args)\n\nAllow to measure periods of time such as AJAX requests and resources loading by sending hits using the analytics.js library. For more detailed description, please refer to https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings.\n\n###### Example\n\nUsage:\n\n```js\nReactGA.timing({\n  category: 'JS Libraries',\n  variable: 'load',\n  value: 20, // in milliseconds\n  label: 'CDN libs'\n});\n```\n\nThis is equivalent to the following Google Analytics command:\n\n```js\nga('send', 'timing', 'JS Libraries', 'load', 20, 'CDN libs');\n```\n\n|Value|Notes|\n|------|-----|\n|args.category|`String`. Required. A string for categorizing all user timing variables into logical groups.|\n|args.variable|`String`. Required. Name of the variable being recorded.|\n|args.value|`Int`. Required. Number of milliseconds elapsed time to report.|\n|args.label|`String`. Optional. It can improved visibility in user timing reports.|\n\n#### ReactGA.ga()\n\nThe original `ga` function can be accessed via this method. This gives developers the flexibility of directly\nusing `ga.js` features that have not yet been implemented in `ReactGA`. No validations will be done\nby `ReactGA` as it is being bypassed if this approach is used.\n\nIf no arguments are passed to `ReactGA.ga()`, the `ga` object is returned instead.\n\n###### Example\n\nUsage with arguments:\n\n```js\nReactGA.ga('send', 'pageview', '/mypage');\n```\n\nUsage without arguments:\n\n```js\nvar ga = ReactGA.ga();\nga('send', 'pageview', '/mypage');\n```\n\n#### ReactGA.outboundLink(args, hitCallback)\n\nTracking links out to external URLs (including id.webmaker.org for OAuth 2.0 login flow). A non-programmatic approach is found in the next section, by using an `<OutboundLink>` component.\n\n###### Example\n\n```js\nReactGA.outboundLink({\n  label: 'Clicked Create an Account'\n}, function () {\n  console.log('redirect here');\n});\n```\n\n|Value|Notes|\n|------|-----|\n|args.label|`String`. Required. Description of where the outbound link points to. Either as a URL, or a string.|\n|hitCallback|`function`. The react-ga implementation accounts for the possibility that GA servers are down, or GA is blocked, by using a fallback 250ms timeout. See [notes in GA Dev Guide](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#hitCallback)|\n\n### `<OutboundLink>` Component\n\nOutbound links can directly be used as a component in your React code and the event label will be sent directly to ReactGA.\n\n###### Example\n\n```js\nvar ReactGA = require('react-ga');\n\nrender() {\n  return (\n    <div>\n      <ReactGA.OutboundLink\n        eventLabel=\"myLabel\"\n        to=\"http://www.example.com\"\n        target=\"_blank\">\n        My Link\n      </ReactGA.OutboundLink>\n    </div>\n  );\n}\n```\n\n|Value|Notes|\n|------|-----|\n|eventLabel|`String`. Required. Description of where the outbound link points to. Either as a URL, or a string.|\n|to|`String`. Required. URL the link leads to.|\n|target|`String`. Optional. To open the link in a new tab, use a value of `_blank`.|\n\nFor bower, use the `<ReactGA.OutboundLink>` component.\n\n\n#### ReactGA.exception(args)\n\n[GA exception tracking](https://developers.google.com/analytics/devguides/collection/analyticsjs/exceptions)\n\n###### Example\n\n```js\nReactGA.exception({\n  description: 'An error ocurred',\n  fatal: true\n});\n```\n\n|Value|Notes|\n|------|-----|\n|args.description|`String`. Optional. Description of what happened.|\n|args.fatal|`String`. Optional. Set to `true` if it was a fatal exception.|\n\n\n#### ReactGA.plugin.require(name, [options])\n\nRequire GA plugins.\n\n###### Example\n```js\nReactGA.plugin.require('localHitSender', { path: '/log', debug: true });\n```\n\n|Value|Notes|\n|------|-----|\n|name|`String`. Required. The name of the plugin to be required. Note: if the plugin is not an official analytics.js plugin, it must be provided elsewhere on the page.|\n|options|`Object`. Optional. An initialization object that will be passed to the plugin constructor upon instantiation.|\n\n\n#### ReactGA.plugin.execute(pluginName, action, [actionType], [payload])\n\nExecute the `action` for the `pluginName` with the payload.\n\n###### Example\n\n```js\nReactGA.plugin.execute('ecommerce', 'addTransaction', {\n  id: 'jd38je31j',\n  revenue: '3.50'\n});\n```\n\nYou can use this function with four arguments to pass `actionType` and `payload` along with executed action\n\n###### Example\n\n```js\nReactGA.plugin.execute('ec', 'setAction', 'purchase', {\n  id: 'jd38je31j',\n  revenue: '3.50'\n});\n```\n\n### Test Mode\n\nTo enable test mode, initialize ReactGA with the `testMode: true` option. Here's an example from `tests/utils/testMode.test.js`\n```js\n// This should be part of your setup\nReactGA.initialize('foo', { testMode: true });\n// This would be in the component/js you are testing\nReactGA.ga('send', 'pageview', '/mypage');\n// This would be how you check that the calls are made correctly\nReactGA.testModeAPI.calls.should.eql([\n  ['create', 'foo', 'auto'],\n  ['send', 'pageview', '/mypage']\n]);\n```\n\n---\n\n## Development\n\n### Prerequisites\n\n* node.js\n* npm\n* `npm install`\n* `npm install react@^15.6.1 prop-types@^15.5.10` - This is for the optionalDependancies.\n\n### To Test\n```bash\nnpm test\n```\n\n### Submitting a PR\n\n* Always work on a new branch\n* Submit Pull Requests against `master`\n\n1. Open a PR\n1. Request code review\n1. Complete code review with fixes\n1. Merge the PR\n1. Then, bump the version as below\n\nThe regenerated `dist` files should not be committed until the review has been R+'d and merged, since it's much easier to do the code review without the `dist` clutter getting in the way.\n\n### To Ship (i.e bump the version number)\n\n```bash\ngit pull...\ngulp build\nmversion patch\ngit add .\ngit commit...\ngit push...\nnpm publish\n```\n\n---\n\n#### Acknowledgements\n\n* Quite a lot of the code in this repo, came from [webmaker-analytics](https://github.com/mozilla/webmaker-analytics).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-ga/react-ga.git"
  },
  "scripts": {
    "build": "webpack",
    "lint": "eslint src webpack.config.js test --ext .js,.jsx",
    "postversion": "git push && git push --tags && npm publish",
    "preversion": "npm test && npm run lint",
    "start": "webpack-dev-server --config demo/webpack.config.js --hot --inline",
    "test": "npm run lint && npm run test-only",
    "test-only": "BABEL_ENV=test nyc mocha",
    "version": "node ./version-bower.js && npm run build && git add -A dist bower.json"
  },
  "types": "./types/index.d.ts",
  "version": "2.4.1"
}
